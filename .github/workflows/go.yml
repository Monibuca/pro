name: Go

on:
  create:
    tags:
      - v*

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v2
      with:
          fetch-depth: 1

    - name: Set up Env
      run: echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.7

    - name: Cache Go modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: runner.os−go−{ { hashFiles('**/go.sum') } }
        restore-keys: ${{ runner.os }}-go-        
    - name: Download PRIVATE dependencies
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
          export GOPRIVATE=m7s.live/plugin/snappro/v4,m7s.live/plugin/transcode/v4,m7s.live/plugin/cascade
          git config --global url.ssh://git@github.com/.insteadOf https://github.com/
          go mod download
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      if: success() && startsWith(github.ref, 'refs/tags/')
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: copy
      if: success() && startsWith(github.ref, 'refs/tags/')
      run:  |
        mkdir -p bin
        cp dist/m7s_${{ env.version }}_windows_amd64.tar.gz bin/m7s_windows_amd64.tar.gz
        cp dist/m7s_${{ env.version }}_darwin_amd64.tar.gz  bin/m7s_darwin_amd64.tar.gz 
        cp dist/m7s_${{ env.version }}_darwin_arm64.tar.gz  bin/m7s_darwin_arm64.tar.gz 
        cp dist/m7s_${{ env.version }}_linux_amd64.tar.gz   bin/m7s_linux_amd64.tar.gz 
        cp dist/m7s_${{ env.version }}_linux_arm64.tar.gz   bin/m7s_linux_arm64.tar.gz 
        ls bin
    - uses: jakejarvis/s3-sync-action@master
        # with:
        #   args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_ENDPOINT: https://${{ secrets.R2_DOMAIN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.R2_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET }}
        AWS_S3_BUCKET: monibuca
        SOURCE_DIR: 'bin'
        DEST_DIR: 'pro'